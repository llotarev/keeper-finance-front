{"version":3,"sources":["routes/index.ts","components/UIKit/styles/classNames.ts","components/UIKit/Button/index.tsx","components/Finance/components/FinanceList/index.tsx","components/UIKit/index.ts","components/Finance/index.tsx","routes/nav.ts","components/Header/index.tsx","App.tsx","api/axios.ts","store/reducer/finance/index.ts","store/index.ts","reportWebVitals.ts","index.tsx"],"names":["routes","root","classNames","classes","Object","entries","map","key","value","trim","Button","props","className","variant","color","other","cn","String","Boolean","FinanceList","children","useState","more","setMore","useSpring","transform","propsController","setController","propsContainer","setContainer","touch","useDrag","down","mx","movement","Math","floor","x","size","div","style","onClick","prevState","alert","Finance","history","useHistory","useEffect","push","setSwipe","path","finance","title","nav","Header","location","useLocation","setTitle","filter","pathname","App","display","justifyContent","axios","create","baseURL","financeReducer","createSlice","name","initialState","reducers","setFinance","state","payload","rootReducer","actions","combineReducers","reducer","store","configureStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13a54a2d.chunk.js","sourcesContent":["const finance = {\n    root: '/finance',\n}\n\nexport const routes = {\n    all: '*',\n    root: '/',\n    finance\n}","function classNames(classes: object): string {\n\n    let classNames: string = '';\n    Object.entries(classes).map(([key, value]) => {\n        if (key === \"undefined\") return;\n        if (value) classNames += ` ${key}`;\n    })\n\n    return classNames.trim();\n}\n\nexport default classNames;","import React, {ButtonHTMLAttributes, FC} from \"react\";\nimport './style.css'\nimport cn from \"../styles/classNames\";\nimport {UIKitColorsType} from \"../UIKitTypes\";\n\nexport interface UIKitButtonElement extends ButtonHTMLAttributes<HTMLButtonElement> {\n    color?: UIKitColorsType\n    variant?: \"link\" | \"outline\" | \"glass\"\n}\n\nexport const Button: FC<UIKitButtonElement> = (props) => {\n\n    const {className, variant, color, ...other} = props\n\n    return (\n        <button className={cn({\n            [String(className)]: true,\n            \"button\": true,\n            [\"button--\" + variant]: Boolean(variant),\n            [\"button-color--\" + color]: Boolean(color),\n        })}{...other}/>\n    )\n}","import React, {FC, LiHTMLAttributes, useState} from \"react\";\nimport './FinanceList.css'\nimport {FiEdit, FiMinusCircle, FiPlusCircle, FiTrash} from \"react-icons/all\";\nimport {UIKit} from \"../../../UIKit\";\nimport {useDrag} from \"react-use-gesture\";\nimport {useSpring, animated} from \"react-spring\";\nimport {log} from \"util\";\n\nconst {Button} = UIKit;\n\ninterface AppComponentList extends LiHTMLAttributes<HTMLUListElement> {\n    // children: any[]\n}\n\nexport const FinanceList: FC<AppComponentList> = (props) => {\n\n    const {children} = props;\n\n    const [more, setMore] = useState<boolean>(false);\n    const [propsController, setController] = useSpring(() => ({transform: 'translateX(116px)'}))\n    const [propsContainer, setContainer] = useSpring(() => ({transform: 'translateX(0px)'}))\n\n    const touch = useDrag(({down, movement: [mx]}) => {\n\n\n        const [x, size]: number[] = [Math.floor(mx), 116];\n\n        if (x >= -size && x <= 0) {\n            setController({transform: `translateX(${x + size}px)`})\n            setContainer({transform: `translateX(${x}px)`})\n        }\n    })\n\n    return (\n        <ul className=\"list\">\n            {/*{children.map((item) => (*/}\n            <li className=\"list__item\" {...touch()}>\n                <animated.div className=\"list__item__container\" style={propsContainer}>\n                    <aside\n                        onClick={() => setMore(prevState => !prevState)}\n                    >\n                        <span className=\"name\">Header</span>\n                        <span className=\"date\">01.01.2020</span>\n                    </aside>\n                    <aside style={{color: 'rgb(var(--color-danger)'}}>\n                        <span className=\"amount\">100</span>\n                        <span className=\"status\">\n                            {false\n                                ? <FiPlusCircle/>\n                                : <FiMinusCircle/>\n                            }\n                        </span>\n                    </aside>\n                </animated.div>\n                {more && (\n                    <div className=\"list__item__more\">\n                        <header>Header</header>\n                        <p>lorem ipsum dolor sit amet consectetuer adipiscing elit</p>\n                    </div>\n                )}\n                <animated.div className=\"list__item__controller\" style={propsController}>\n                    <Button variant=\"glass\" onClick={() => alert(\"Edit\")}><FiEdit/></Button>\n                    <Button variant=\"glass\" color=\"danger\" onClick={() => alert(\"Trash\")}><FiTrash/></Button>\n                </animated.div>\n            </li>\n            {/*))}*/}\n        </ul>\n    )\n}\n","import {Input} from \"./Input\";\nimport {Button} from \"./Button\";\nimport {ButtonGroup} from \"./ButtonGroup\";\nimport {Textarea} from \"./Textarea\";\nimport {Label} from \"./Label\";\nimport {Alerts} from \"./Alerts\";\n\nexport const UIKit = {\n    Input,\n    Button,\n    ButtonGroup,\n    Textarea,\n    Label,\n    Alerts\n}","import React, {useEffect} from \"react\";\nimport \"./Finance.css\"\nimport {Route, useHistory} from \"react-router-dom\";\nimport {routes} from \"../../routes\";\nimport {useDrag} from \"react-use-gesture\";\nimport {useSpring} from \"react-spring\";\nimport {FiMinusCircle} from \"react-icons/all\";\nimport {AddItem} from \"./components/AddItem\";\nimport {FinanceList} from \"./components/FinanceList\";\n\n\nexport function Finance() {\n\n    const history = useHistory();\n    useEffect(() => {\n        history.push(routes.finance.root)\n    }, [])\n\n    const [swipe, setSwipe] = useSpring(() => ({transform: 'translateX(0px)'}))\n    const touch = useDrag(({down, movement: [mx]}) => {\n        if (mx <= 0 && down) {\n            setSwipe({transform: `translateX(${mx}px)`});\n        }\n    })\n\n    return (\n        <div className=\"finance\">\n            <Route path={routes.finance.root}>\n                <FinanceList/>\n                {/*<AddItem/>*/}\n            </Route>\n        </div>\n    )\n}","import {routes} from \"./index\";\n\nconst finance = [\n    {\n        path: routes.finance.root,\n        // title: \"Финансы\"\n        title: \"\"\n    }\n]\n\nexport const nav = [\n    ...finance\n]","import React, {useEffect, useState} from \"react\";\nimport './Header.css'\nimport {useLocation} from \"react-router-dom\";\nimport {nav} from \"../../routes/nav\";\n\n\nexport function Header() {\n\n    const location = useLocation();\n\n    /* state */\n    const [title, setTitle] = useState(\"Заголовок\")\n\n    useEffect(() => {\n        nav.filter(({path, title}) => {\n            if (path === location.pathname) setTitle(title)\n        })\n    }, [location])\n\n    return (\n        <header className=\"header\">\n            <div className=\"header__title\">\n                <h3>{title}</h3>\n            </div>\n        </header>\n    )\n}","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport {routes} from './routes';\nimport {Finance} from \"./components/Finance\";\nimport {Header} from './components/Header';\nimport {Button} from \"./components/UIKit/Button\";\n\nexport function App() {\n\n    return (\n        <Router>\n            <div className='app'>\n                <Route path={routes.root}>\n                    <Header/>\n                    <div style={{\n                        display: 'flex',\n                        justifyContent: 'space-around'\n                    }}>\n                        <Button variant=\"link\">all</Button>\n                        <Button variant=\"glass\">spending</Button>\n                        <Button variant=\"link\">income</Button>\n                    </div>\n\n                    <Finance/>\n                </Route>\n            </div>\n        </Router>\n    );\n}\n","import * as axios from 'axios';\n\nexport const instance = axios.default.create({\n    baseURL: 'http://localhost:4000/api',\n})","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {financeThunk} from \"./thunk\";\nimport {StateType} from \"../../index\";\nimport {IFinance} from \"../../../api\";\n\ninterface IFinanceItem extends IFinance {\n    id: number\n}\n\ntype InitialStateType = {\n    finance: IFinanceItem[]\n}\n\nconst initialState: InitialStateType = {\n    finance: []\n}\n\nexport const financeReducer = createSlice({\n    name: '@financeReducer',\n    initialState,\n    reducers: {\n        setFinance(state, {payload}: PayloadAction<{ finance: any[] }>) {\n            state.finance = payload.finance\n        }\n    },\n});\n\n\nexport const financeReducerActions = financeReducer.actions;\nexport const financeReducerThunk = financeThunk;\nexport const financeReducerSelectors = {\n    getState: (state: StateType) => state.financeReducer,\n    getFinance: (state: StateType) => state.financeReducer.finance\n};","import {configureStore, combineReducers} from \"@reduxjs/toolkit\";\nimport {financeReducer} from \"./reducer/finance\";\n\nconst rootReducer = combineReducers({\n    financeReducer: financeReducer.reducer\n})\n\nexport type StateType = ReturnType<typeof rootReducer>\n\nexport const store = configureStore({\n    reducer: rootReducer\n})","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport {store} from \"./store\";\nimport {Provider} from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}